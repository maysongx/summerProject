"use strict";var Buffer=require("safer-buffer").Buffer;exports._sbcs=SBCSCodec;function SBCSCodec(e,a){if(!e){throw new Error("SBCS codec is called without the data.")}if(!e.chars||(e.chars.length!==128&&e.chars.length!==256)){throw new Error("Encoding '"+e.type+"' has incorrect 'chars' (must be of len 128 or 256)")}if(e.chars.length===128){var b="";for(var d=0;d<128;d++){b+=String.fromCharCode(d)}e.chars=b+e.chars}this.decodeBuf=new Buffer.from(e.chars,"ucs2");var c=new Buffer.alloc(65536,a.defaultCharSingleByte.charCodeAt(0));for(var d=0;d<e.chars.length;d++){c[e.chars.charCodeAt(d)]=d}this.encodeBuf=c}SBCSCodec.prototype.encoder=SBCSEncoder;SBCSCodec.prototype.decoder=SBCSDecoder;function SBCSEncoder(a,b){this.encodeBuf=b.encodeBuf}SBCSEncoder.prototype.write=function(c){var a=Buffer.alloc(c.length);for(var b=0;b<c.length;b++){a[b]=this.encodeBuf[c.charCodeAt(b)]}return a};SBCSEncoder.prototype.end=function(){};function SBCSDecoder(a,b){this.decodeBuf=b.decodeBuf}SBCSDecoder.prototype.write=function(c){var f=this.decodeBuf;var e=Buffer.alloc(c.length*2);var b=0,a=0;for(var d=0;d<c.length;d++){b=c[d]*2;a=d*2;e[a]=f[b];e[a+1]=f[b+1]}return e.toString("ucs2")};SBCSDecoder.prototype.end=function(){};